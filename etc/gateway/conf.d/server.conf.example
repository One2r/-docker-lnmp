upstream default {
    ip_hash;
    server nginx:9527 max_fails=30 fail_timeout=10s;
}

server {
    listen       80;
    listen  [::]:80;
    server_name     server_name;

    #listen      443 ssl;
    #ssl_certificate /usr/local/openresty/nginx/cert/default.cer;
    #ssl_certificate_key /usr/local/openresty/nginx/cert/default.key;
    #ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    #ssl_prefer_server_ciphers on;

    access_log  logs/default.access.log main;
    error_log   logs/default.error.log;
    
    default_type 'text/plain';
    resolver 127.0.0.11;

    access_by_lua_block {
        local circuitbreaker = require "circuitbreaker"
        local cb = circuitbreaker.get_circuit_breaker(ngx.var.uri, ngx.var.host)
        local _, err_cb = cb:_before()
        if err_cb then
            ngx.exit(ngx.HTTP_TOO_MANY_REQUESTS)
        end
	}

    log_by_lua_block {
        local circuitbreaker = require "circuitbreaker"
        local cb = circuitbreaker.get_circuit_breaker(ngx.var.uri, ngx.var.host)
        local generation = cb._generation

        local ok = ngx.status and ngx.status < 500
        cb:_after(generation, ok)
    }

    location @proxy {
        proxy_pass http://default;
        include proxy_params;
    }

    location @proxy-with-waf {
        modsecurity on;
        modsecurity_rules_file /usr/local/openresty/nginx/waf/waf.conf;

        proxy_pass http://default;
        include proxy_params;
    }

    location /
    {
        rewrite_by_lua_file "/usr/local/openresty/nginx/waf/bootstrap.lua";
    }
}
